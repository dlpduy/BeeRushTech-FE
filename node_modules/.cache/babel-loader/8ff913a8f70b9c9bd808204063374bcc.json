{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ecomerce\\\\firebase-main\\\\src\\\\pages\\\\Patient\\\\components\\\\UpdatePatientInformation.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { db } from '../../services/firebase-config';\nimport { getDoc, updateDoc, doc } from \"firebase/firestore\"; // Import các biến và hàm từ Firebase Firestore\n\nimport { useAuthValue } from '../../../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isDefine = (e, name, age, gender, insurance, email) => {\n  if (e.information == null) {\n    console.log('Patient is undefine');\n    return true;\n  } //check if there are existing patient that match the provided information\n\n\n  const conflictPatient = e.information.find(information => information.name === name && information.age === age && information.gender === gender && information.insurance === insurance && information.email === email);\n\n  if (!conflictPatient) {\n    console.log('Patient is undefine');\n    return true;\n  }\n\n  console.log('Patient is define');\n  return false;\n};\n\nconst UpdatePatientInformation = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [age, setAge] = useState('');\n  const [gender, setGender] = useState('');\n  const [insurance, setInsurance] = useState('');\n  const [address, setAddress] = useState('');\n  const {\n    currentUser\n  } = useAuthValue();\n\n  const setInformationDetail = async e => {\n    e.preventDefault();\n\n    try {\n      //Lấy dữ liệu từ firestore\n      const userRef = doc(db, 'users', currentUser.uid);\n      const userDoc = await getDoc(userRef);\n      const userData = userDoc.data(); // lấy dữ liệu hiện tại\n\n      if (isDefine(userDoc, name, age, gender, insurance)) {\n        const updatedUserData = { ...userData,\n          username: name,\n          age: age,\n          gender: gender,\n          insurance: insurance,\n          address: address\n        };\n        await updateDoc(userRef, updatedUserData);\n        alert('Patient Information Updated Successfully');\n      }\n    } catch (error) {\n      console.error('Error updating Patient Information:', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"updatePatient\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Update Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: setInformationDetail,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columnl\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"string\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Age:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: age,\n            onChange: e => setAge(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"string\",\n            value: gender,\n            onChange: e => setGender(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columnr\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Insurance Code:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"string\",\n            value: insurance,\n            onChange: e => setInsurance(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"string\",\n            value: address,\n            onChange: e => setAddress(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 13\n  }, this);\n};\n\n_s(UpdatePatientInformation, \"BJnQYD0XILuVgQ05VO3weGUXXIc=\", false, function () {\n  return [useAuthValue];\n});\n\n_c = UpdatePatientInformation;\nexport default UpdatePatientInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePatientInformation\");","map":{"version":3,"sources":["D:/Ecomerce/firebase-main/src/pages/Patient/components/UpdatePatientInformation.js"],"names":["useState","db","getDoc","updateDoc","doc","useAuthValue","isDefine","e","name","age","gender","insurance","email","information","console","log","conflictPatient","find","UpdatePatientInformation","setName","setAge","setGender","setInsurance","address","setAddress","currentUser","setInformationDetail","preventDefault","userRef","uid","userDoc","userData","data","updatedUserData","username","alert","error","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { db } from '../../services/firebase-config';\nimport { getDoc, updateDoc, doc } from \"firebase/firestore\"; // Import các biến và hàm từ Firebase Firestore\nimport { useAuthValue } from '../../../context/AuthContext';\n\nconst isDefine = (e, name, age, gender, insurance, email) => {\n    if (e.information == null){\n        console.log('Patient is undefine');\n        return true;\n    }\n    //check if there are existing patient that match the provided information\n    const conflictPatient = e.information.find(information => information.name===name \n                                                                    && information.age===age\n                                                                    && information.gender===gender\n                                                                    && information.insurance===insurance\n                                                                    && information.email===email);\n    if(!conflictPatient){\n        console.log('Patient is undefine');\n        return true;\n    }   \n    console.log('Patient is define');\n    return false; \n};\n\nconst UpdatePatientInformation =  () => {\n    const[name,setName]=useState('');\n    const [age,setAge ]= useState('');\n    const[gender,setGender]=useState('');\n    const[insurance,setInsurance]=useState('');\n    const[address,setAddress]=useState('');\n    const {currentUser}=useAuthValue();\n    const setInformationDetail = async(e) =>{\n        e.preventDefault();\n        try{\n            //Lấy dữ liệu từ firestore\n            const userRef = doc(db, 'users', currentUser.uid);\n            const userDoc = await getDoc(userRef);\n            const userData=userDoc.data(); // lấy dữ liệu hiện tại\n\n            if(isDefine(userDoc,name,age,gender,insurance)){\n                const updatedUserData={\n                    ...userData,\n                        username: name,\n                        age: age,\n                        gender: gender,\n                        insurance: insurance,\n                        address:address\n                    };\n                    \n                await updateDoc(userRef,updatedUserData);\n                alert('Patient Information Updated Successfully');\n            }}\n            catch( error){\n                console.error('Error updating Patient Information:',error);\n            }\n        };\n\n\n        return (\n            <div className='updatePatient'>\n            <h1><strong>Update Information</strong></h1>\n            <form onSubmit={setInformationDetail}>\n                <div className='row'>\n                <div className='columnl'>\n                <p> Name: </p>\n                <input\n                type='string'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                required\n                />\n                \n                <br/>\n                <p> Age:</p>\n                <input\n                type='number'\n                value={age}\n                onChange={(e) => setAge(e.target.value)}\n                required\n                />\n                \n                <br/>\n                <p> Gender</p>\n                <input\n                type='string'\n                value={gender}\n                onChange={(e) => setGender(e.target.value)}\n                required\n                />\n                </div>\n                <div className='columnr'>\n             \n                <p> Insurance Code:</p>\n                <input\n                type='string'\n                value={insurance}\n                onChange={(e) => setInsurance(e.target.value)}\n                required\n                />\n                <br/>\n                <p> Address:</p>\n                <input\n                type='string'\n                value={address}\n                onChange={(e) => setAddress(e.target.value)}\n                required\n                />                \n                </div>\n                </div>\n                <br/>\n                <button type='submit'  >Update Information</button>\n            </form>\n            </div>\n        );\n\n\n};\nexport default UpdatePatientInformation;"]},"metadata":{},"sourceType":"module"}