{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ecomerce\\\\firebase-main\\\\src\\\\pages\\\\Patient\\\\components\\\\List.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { db } from '../../services/firebase-config';\nimport { doc, getDoc, updateDoc, onSnapshot } from \"firebase/firestore\";\nimport { useAuthValue } from '../../../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppointmentB = () => {\n  _s();\n\n  const {\n    currentUser\n  } = useAuthValue();\n  const [loading, setLoading] = useState(true);\n  const [appointments, setAppointments] = useState([]);\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      try {\n        if (currentUser) {\n          const userDocRef = doc(db, 'users', currentUser.uid);\n          const unsubscribe = onSnapshot(userDocRef, doc => {\n            if (doc.exists()) {\n              const userData = doc.data();\n\n              if (userData.appointments) {\n                setAppointments(userData.appointments);\n              } else {\n                // Xử lý trường hợp không có trường 'appointments'\n                console.log('Không có dữ liệu cuộc hẹn nào.');\n              }\n            } else {\n              // Xử lý trường hợp tài liệu không tồn tại\n              console.log('Tài liệu người dùng không tồn tại.');\n            }\n\n            setLoading(false);\n          });\n          return () => unsubscribe();\n        }\n      } catch (error) {\n        console.error('Lỗi khi tải danh sách cuộc hẹn:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchAppointments();\n  }, [currentUser]);\n\n  const deleteDoctorAppointments = async (appointment, patientId) => {\n    try {\n      const doctorRef = doc(db, 'doctor', appointment.doctorId);\n      const doctorDoc = await getDoc(doctorRef);\n      const doctorAppointments = doctorDoc.data().appointments || [];\n      const updatedAppointments = doctorAppointments.filter(appt => appt.date !== appointment.date || appt.time !== appointment.time || appt.patientId !== patientId);\n      await updateDoc(doctorRef, {\n        appointments: updatedAppointments\n      });\n      console.log('Doctor appointments deleted successfully!');\n    } catch (error) {\n      console.error('Error deleting doctor appointments:', error);\n    }\n  };\n\n  const deleteAppointment = async appointment => {\n    try {\n      const userRef = doc(db, 'users', currentUser.uid);\n      const userDoc = await getDoc(userRef);\n      const userAppointments = userDoc.data().appointments || [];\n      const updatedAppointments = userAppointments.filter(appt => appt.date !== appointment.date || appt.time !== appointment.time || appt.doctorName !== appointment.doctorName);\n      await updateDoc(userRef, {\n        appointments: updatedAppointments\n      });\n      setAppointments(updatedAppointments); // Cập nhật danh sách cuộc hẹn cục bộ\n\n      console.log('Appointment deleted successfully!');\n    } catch (error) {\n      console.error('Error deleting appointment:', error);\n    }\n  };\n\n  const getStatusColor = status => {\n    switch (status) {\n      case 'approve':\n        return 'green';\n\n      case 'pending':\n        return 'orange';\n\n      case 'reject':\n        return 'red';\n\n      default:\n        return 'black';\n      // Màu mặc định nếu trạng thái không được nhận diện\n    }\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reason\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: appointments.length > 0 ? appointments.map((appointment, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: appointment.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: appointment.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: appointment.reason\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"status\",\n            style: {\n              color: getStatusColor(appointment.status)\n            },\n            children: appointment.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                deleteAppointment(appointment);\n                deleteDoctorAppointments(appointment, currentUser.uid);\n              },\n              disabled: appointment.status === 'approve',\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"5\",\n            children: \"No appointments found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AppointmentB, \"ucCe21Pbnxw9EfMuc0nMLly9Zo8=\", false, function () {\n  return [useAuthValue];\n});\n\n_c = AppointmentB;\nexport default AppointmentB;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppointmentB\");","map":{"version":3,"sources":["D:/Ecomerce/firebase-main/src/pages/Patient/components/List.js"],"names":["useState","useEffect","db","doc","getDoc","updateDoc","onSnapshot","useAuthValue","AppointmentB","currentUser","loading","setLoading","appointments","setAppointments","fetchAppointments","userDocRef","uid","unsubscribe","exists","userData","data","console","log","error","deleteDoctorAppointments","appointment","patientId","doctorRef","doctorId","doctorDoc","doctorAppointments","updatedAppointments","filter","appt","date","time","deleteAppointment","userRef","userDoc","userAppointments","doctorName","getStatusColor","status","length","map","index","reason","color"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { db } from '../../services/firebase-config';\nimport { doc, getDoc, updateDoc, onSnapshot } from \"firebase/firestore\";\nimport { useAuthValue } from '../../../context/AuthContext';\n\nconst AppointmentB = () => {\n    const { currentUser } = useAuthValue();\n    const [loading, setLoading] = useState(true);\n    const [appointments, setAppointments] = useState([]);\n\n    useEffect(() => {\n        const fetchAppointments = async () => {\n          try {\n            if (currentUser) {\n              const userDocRef = doc(db, 'users', currentUser.uid);\n              const unsubscribe = onSnapshot(userDocRef, (doc) => {\n                if (doc.exists()) {\n                  const userData = doc.data();\n                  if (userData.appointments) {\n                    setAppointments(userData.appointments);\n                  } else {\n                    // Xử lý trường hợp không có trường 'appointments'\n                    console.log('Không có dữ liệu cuộc hẹn nào.');\n                  }\n                } else {\n                  // Xử lý trường hợp tài liệu không tồn tại\n                  console.log('Tài liệu người dùng không tồn tại.');\n                }\n                setLoading(false);\n              });\n              return () => unsubscribe();\n            }\n          } catch (error) {\n            console.error('Lỗi khi tải danh sách cuộc hẹn:', error);\n            setLoading(false);\n          }\n        };\n      \n        fetchAppointments();\n      }, [currentUser]);\n      \n\n    const deleteDoctorAppointments = async (appointment, patientId) => {\n        try {\n            const doctorRef = doc(db, 'doctor', appointment.doctorId);\n            const doctorDoc = await getDoc(doctorRef);\n            const doctorAppointments = doctorDoc.data().appointments || [];\n            const updatedAppointments = doctorAppointments.filter(appt => \n                appt.date !== appointment.date || \n                appt.time !== appointment.time || \n                appt.patientId !== patientId\n            );\n\n            await updateDoc(doctorRef, { appointments: updatedAppointments });\n            console.log('Doctor appointments deleted successfully!');\n        } catch (error) {\n            console.error('Error deleting doctor appointments:', error);\n        }\n    };\n\n    const deleteAppointment = async (appointment) => {\n        try {\n            const userRef = doc(db, 'users', currentUser.uid);\n            const userDoc = await getDoc(userRef);\n            const userAppointments = userDoc.data().appointments || [];\n            const updatedAppointments = userAppointments.filter(appt => \n                appt.date !== appointment.date || \n                appt.time !== appointment.time || \n                appt.doctorName !== appointment.doctorName\n            );\n\n            await updateDoc(userRef, { appointments: updatedAppointments });\n            setAppointments(updatedAppointments); // Cập nhật danh sách cuộc hẹn cục bộ\n            console.log('Appointment deleted successfully!');\n        } catch (error) {\n            console.error('Error deleting appointment:', error);\n        }\n    };\n\n    const getStatusColor = (status) => {\n        switch (status) {\n            case 'approve':\n              return 'green';\n            case 'pending':\n              return 'orange';\n            case 'reject':\n              return 'red';\n            default:\n              return 'black'; // Màu mặc định nếu trạng thái không được nhận diện\n          }\n    };\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div className='list'>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Date</th>\n                        <th>Time</th>\n                        <th>Reason</th>\n                        <th>Status</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {appointments.length > 0 ? (\n                        appointments.map((appointment, index) => (\n                            <tr key={index}>\n                                <td>{appointment.date}</td>\n                                <td>{appointment.time}</td>\n                                <td>{appointment.reason}</td>\n                                <td className='status' style={{ color: getStatusColor(appointment.status) }}>{appointment.status}</td>\n                                <td>\n                                    <button \n                                        onClick={() => {\n                                            deleteAppointment(appointment);\n                                            deleteDoctorAppointments(appointment, currentUser.uid);\n                                        }}\n                                        disabled={appointment.status === 'approve'}\n                                    >\n                                        Cancel\n                                    </button>\n                                </td>\n                            </tr>\n                        ))\n                    ) : (\n                        <tr>\n                            <td colSpan=\"5\">No appointments found</td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default AppointmentB;\n"]},"metadata":{},"sourceType":"module"}