{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ecomerce\\\\firebase-main\\\\src\\\\pages\\\\Auth\\\\PasswordReset.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { sendPasswordResetEmail } from \"firebase/auth\";\nimport { auth } from '../services/firebase-config'; // Đường dẫn cần được kiểm tra cho đúng\n\nimport { toast, ToastContainer } from 'react-toastify';\nimport './PasswordReset.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PasswordReset = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n\n  const isEmailValid = email => {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (!email || !isEmailValid(email)) {\n      toast.error(\"Please enter a valid email address.\");\n      return;\n    }\n\n    try {\n      await sendPasswordResetEmail(auth, email);\n      toast.success(\"A password reset email has been sent to your email address.\");\n    } catch (error) {\n      console.error(\"Failed to send password reset email: \", error);\n      toast.error(\"Failed to send password reset email. Please try again.\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"password-reset-background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password-reset-container\",\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n        position: \"top-center\",\n        autoClose: 5000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-reset-content row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 text-change-password\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 form-group password-reset-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            className: \"form-control\",\n            placeholder: \"Enter your email\",\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button-change-password\",\n            onClick: handleSubmit,\n            children: \"Send Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PasswordReset, \"qu4bovk5U4+JuhY7vxbmswqixrc=\");\n\n_c = PasswordReset;\nexport default PasswordReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"sources":["D:/Ecomerce/firebase-main/src/pages/Auth/PasswordReset.js"],"names":["React","useState","sendPasswordResetEmail","auth","toast","ToastContainer","PasswordReset","email","setEmail","isEmailValid","test","handleSubmit","event","preventDefault","error","success","console","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,sBAAT,QAAuC,eAAvC;AACA,SAASC,IAAT,QAAqB,6BAArB,C,CAAoD;;AACpD,SAASC,KAAT,EAAgBC,cAAhB,QAAsC,gBAAtC;AACA,OAAO,sBAAP;;;AACA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMQ,YAAY,GAAIF,KAAD,IAAW;AAC5B,WAAO,6BAA6BG,IAA7B,CAAkCH,KAAlC,CAAP;AACH,GAFD;;AAGA,QAAMI,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAClCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI,CAACN,KAAD,IAAU,CAACE,YAAY,CAACF,KAAD,CAA3B,EAAoC;AAChCH,MAAAA,KAAK,CAACU,KAAN,CAAY,qCAAZ;AACA;AACH;;AACD,QAAI;AACA,YAAMZ,sBAAsB,CAACC,IAAD,EAAOI,KAAP,CAA5B;AACAH,MAAAA,KAAK,CAACW,OAAN,CAAc,6DAAd;AACH,KAHD,CAGE,OAAOD,KAAP,EAAc;AACZE,MAAAA,OAAO,CAACF,KAAR,CAAc,uCAAd,EAAuDA,KAAvD;AACAV,MAAAA,KAAK,CAACU,KAAN,CAAY,wDAAZ;AACH;AACJ,GAbD;;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,8BACI,QAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,YAAzB;AAAsC,QAAA,SAAS,EAAE;AAAjD;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,6BAAf;AAAA,oBAA6C;AAA7C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,wCAAf;AAAA,kCACI;AAAA,sBAAO;AAAP;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,IAAI,EAAC,OADT;AAEI,YAAA,KAAK,EAAEP,KAFX;AAGI,YAAA,SAAS,EAAC,cAHd;AAII,YAAA,WAAW,EAAC,kBAJhB;AAKI,YAAA,QAAQ,EAAGU,CAAD,IAAOT,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV;AAL7B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAYI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACI;AAAQ,YAAA,KAAK,EAAC,wBAAd;AAAuC,YAAA,OAAO,EAAER,YAAhD;AAAA,sBAA8D;AAA9D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CA7CD;;GAAML,a;;KAAAA,a;AA+CN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport { sendPasswordResetEmail } from \"firebase/auth\";\nimport { auth } from '../services/firebase-config'; // Đường dẫn cần được kiểm tra cho đúng\nimport { toast, ToastContainer } from 'react-toastify';\nimport './PasswordReset.scss';\nconst PasswordReset = () => {\n    const [email, setEmail] = useState('');\n\n    const isEmailValid = (email) => {\n        return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n    }\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if (!email || !isEmailValid(email)) {\n            toast.error(\"Please enter a valid email address.\");\n            return;\n        }\n        try {\n            await sendPasswordResetEmail(auth, email);\n            toast.success(\"A password reset email has been sent to your email address.\");\n        } catch (error) {\n            console.error(\"Failed to send password reset email: \", error);\n            toast.error(\"Failed to send password reset email. Please try again.\");\n        }\n    };\n\n    return (\n        <div className='password-reset-background'>\n            <div className=\"password-reset-container\">\n                <ToastContainer position=\"top-center\" autoClose={5000} />\n                \n                <div className='password-reset-content row'>\n                    <div className=\"col-12 text-change-password\">Reset Password</div>\n                    <div className=\"col-12 form-group password-reset-input\">\n                        <label>Email:</label>\n                        <input\n                            type=\"email\"\n                            value={email}\n                            className=\"form-control\"\n                            placeholder=\"Enter your email\"\n                            onChange={(e) => setEmail(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"col-12\">\n                        <button class=\"button-change-password\" onClick={handleSubmit}>Send Reset Password</button>\n                    </div>\n                </div>\n            </div>\n        </div >\n    );\n};\n\nexport default PasswordReset;\n"]},"metadata":{},"sourceType":"module"}