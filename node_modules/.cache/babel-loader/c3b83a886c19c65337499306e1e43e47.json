{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ecomerce\\\\firebase-main\\\\src\\\\pages\\\\Administrator\\\\components\\\\Contents\\\\ManageDevices\\\\ManageDevice.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { db } from '../../../../services/firebase-config';\nimport { collection, addDoc, deleteDoc, doc, updateDoc, onSnapshot } from \"firebase/firestore\";\nimport \"./ManageDevice.css\";\nimport AdminNavbar from '../../AdminNavbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ManageDevice() {\n  _s();\n\n  const [showDeviceForm, setShowDeviceForm] = useState(false);\n  const [deviceList, setDeviceList] = useState([]);\n  const [filteredDevices, setFilteredDevices] = useState([]);\n  const [deviceInfo, setDeviceInfo] = useState({\n    deviceName: \"\",\n    deviceType: \"\",\n    deviceID: \"\",\n    deviceStatus: \"\",\n    manufactureDate: \"\"\n  });\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    const unsubscribe = onSnapshot(collection(db, \"devices\"), snapshot => {\n      const devices = [];\n      snapshot.forEach(doc => {\n        devices.push({ ...doc.data(),\n          id: doc.id\n        });\n      });\n      setDeviceList(devices);\n      setFilteredDevices(devices);\n    }); // Clean up function to unsubscribe from the snapshot listener when component unmounts\n\n    return () => unsubscribe();\n  }, []);\n\n  const handleInputChange = e => {\n    setDeviceInfo({ ...deviceInfo,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleCloseForm = () => {\n    // Xử lý khi người dùng nhấp vào nút \"x\"\n    setShowDeviceForm(false);\n  };\n\n  const handleSearch = e => {\n    const term = e.target.value.toLowerCase();\n    setSearchTerm(term);\n\n    if (!term) {\n      setFilteredDevices(deviceList);\n      return;\n    }\n\n    const filtered = deviceList.filter(device => device.deviceName.toLowerCase().includes(term));\n    setFilteredDevices(filtered);\n  };\n\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      let updatedDevice;\n\n      if (deviceInfo.id) {\n        await updateDoc(doc(db, \"devices\", deviceInfo.id), deviceInfo);\n        updatedDevice = { ...deviceInfo\n        };\n        setDeviceList(prevList => prevList.map(device => device.id === deviceInfo.id ? updatedDevice : device));\n        setFilteredDevices(prevFiltered => prevFiltered.map(device => device.id === deviceInfo.id ? updatedDevice : device));\n      } else {\n        const docRef = await addDoc(collection(db, \"devices\"), deviceInfo);\n        updatedDevice = { ...deviceInfo,\n          id: docRef.id\n        };\n        setDeviceList(prevList => [...prevList, updatedDevice]);\n        setFilteredDevices(prevFiltered => [...prevFiltered, updatedDevice]);\n      } // Cập nhật giao diện ngay lập tức\n      // Đóng form sau khi lưu\n\n\n      setShowDeviceForm(false);\n    } catch (error) {\n      console.error(\"Lỗi khi thêm hoặc cập nhật thiết bị:\", error);\n    }\n  };\n\n  const handleDeleteDevice = async deviceId => {\n    await deleteDoc(doc(db, \"devices\", deviceId));\n    setDeviceList(prevList => prevList.filter(device => device.id !== deviceId));\n    setFilteredDevices(prevFiltered => prevFiltered.filter(device => device.id !== deviceId));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manangerDevice\",\n    children: [/*#__PURE__*/_jsxDEV(AdminNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Device managerment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Device searching...\",\n      value: searchTerm,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowDeviceForm(true),\n      children: \"Add Device\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), showDeviceForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleFormSubmit,\n          className: \"device-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"deviceName\",\n            placeholder: \"Device Name\",\n            value: deviceInfo.deviceName,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"deviceType\",\n            placeholder: \"Device Type\",\n            value: deviceInfo.deviceType,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"deviceID\",\n            placeholder: \"deviceID\",\n            value: deviceInfo.deviceID,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"deviceStatus\",\n            placeholder: \"Device Status\",\n            value: deviceInfo.deviceStatus,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"manufactureDate\",\n            value: deviceInfo.manufactureDate,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save Device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: handleCloseForm,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"device-list\",\n      children: filteredDevices.map(device => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"device-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"device-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: device.deviceName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Type: \", device.deviceType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"deviceID: \", device.deviceID]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", device.deviceStatus]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Manufacture Date: \", device.manufactureDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-device\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setDeviceInfo(device);\n              setShowDeviceForm(true);\n            },\n            children: \"Setting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteDevice(device.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, device.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ManageDevice, \"6yi5CYC9+RHEmIOSRPG66wvtVz8=\");\n\n_c = ManageDevice;\nexport default ManageDevice;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManageDevice\");","map":{"version":3,"sources":["D:/Ecomerce/firebase-main/src/pages/Administrator/components/Contents/ManageDevices/ManageDevice.js"],"names":["React","useState","useEffect","db","collection","addDoc","deleteDoc","doc","updateDoc","onSnapshot","AdminNavbar","ManageDevice","showDeviceForm","setShowDeviceForm","deviceList","setDeviceList","filteredDevices","setFilteredDevices","deviceInfo","setDeviceInfo","deviceName","deviceType","deviceID","deviceStatus","manufactureDate","searchTerm","setSearchTerm","unsubscribe","snapshot","devices","forEach","push","data","id","handleInputChange","e","target","name","value","handleCloseForm","handleSearch","term","toLowerCase","filtered","filter","device","includes","handleFormSubmit","preventDefault","updatedDevice","prevList","map","prevFiltered","docRef","error","console","handleDeleteDevice","deviceId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { db } from '../../../../services/firebase-config';\nimport { collection, addDoc, deleteDoc, doc, updateDoc, onSnapshot } from \"firebase/firestore\";\nimport \"./ManageDevice.css\";\nimport AdminNavbar from '../../AdminNavbar';\n\nfunction ManageDevice() {\n  const [showDeviceForm, setShowDeviceForm] = useState(false);\n  const [deviceList, setDeviceList] = useState([]);\n  const [filteredDevices, setFilteredDevices] = useState([]);\n  const [deviceInfo, setDeviceInfo] = useState({\n    deviceName: \"\",\n    deviceType: \"\",\n    deviceID: \"\",\n    deviceStatus: \"\",\n    manufactureDate: \"\",\n  });\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n      const unsubscribe = onSnapshot(collection(db, \"devices\"), (snapshot) => {\n          const devices = [];\n          snapshot.forEach((doc) => {\n              devices.push({ ...doc.data(), id: doc.id });\n          });\n          setDeviceList(devices);\n          setFilteredDevices(devices);\n      });\n\n      // Clean up function to unsubscribe from the snapshot listener when component unmounts\n      return () => unsubscribe();\n  }, []);\n\n\n  const handleInputChange = (e) => {\n    setDeviceInfo({ ...deviceInfo, [e.target.name]: e.target.value });\n  };\n\n\n\n  const handleCloseForm = () => {\n    // Xử lý khi người dùng nhấp vào nút \"x\"\n    setShowDeviceForm(false);\n  };\n\n  const handleSearch = (e) => {\n    const term = e.target.value.toLowerCase();\n    setSearchTerm(term);\n    if (!term) {\n      setFilteredDevices(deviceList);\n      return;\n    }\n    const filtered = deviceList.filter(\n      (device) => device.deviceName.toLowerCase().includes(term)\n    );\n    setFilteredDevices(filtered);\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let updatedDevice;\n      if (deviceInfo.id) {\n        await updateDoc(doc(db, \"devices\", deviceInfo.id), deviceInfo);\n        updatedDevice = { ...deviceInfo };\n        setDeviceList((prevList) =>\n          prevList.map((device) =>\n            device.id === deviceInfo.id ? updatedDevice : device\n          )\n        );\n        setFilteredDevices((prevFiltered) =>\n          prevFiltered.map((device) =>\n            device.id === deviceInfo.id ? updatedDevice : device\n          )\n        );\n      } else {\n        const docRef = await addDoc(collection(db, \"devices\"), deviceInfo);\n        updatedDevice = { ...deviceInfo, id: docRef.id };\n        setDeviceList((prevList) => [...prevList, updatedDevice]);\n        setFilteredDevices((prevFiltered) => [...prevFiltered, updatedDevice]);\n      }\n      // Cập nhật giao diện ngay lập tức\n      // Đóng form sau khi lưu\n      \n      setShowDeviceForm(false);\n    } catch (error) {\n      console.error(\"Lỗi khi thêm hoặc cập nhật thiết bị:\", error);\n    }\n  };\n\n  const handleDeleteDevice = async (deviceId) => {\n    await deleteDoc(doc(db, \"devices\", deviceId));\n    setDeviceList((prevList) =>\n      prevList.filter((device) => device.id !== deviceId)\n    );\n    setFilteredDevices((prevFiltered) =>\n      prevFiltered.filter((device) => device.id !== deviceId)\n    );\n  };\n\n  return (\n    <div className=\"manangerDevice\">\n      <AdminNavbar />\n      <h1>Device managerment</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Device searching...\"\n        value={searchTerm}\n        onChange={handleSearch}\n      />\n      <button onClick={() => setShowDeviceForm(true)}>Add Device</button>\n      {showDeviceForm && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <form  onSubmit={handleFormSubmit} className=\"device-form\">\n              <input\n                name=\"deviceName\"\n                placeholder=\"Device Name\"\n                value={deviceInfo.deviceName}\n                onChange={handleInputChange}\n              />\n              <input\n                name=\"deviceType\"\n                placeholder=\"Device Type\"\n                value={deviceInfo.deviceType}\n                onChange={handleInputChange}\n              />\n              <input\n                name=\"deviceID\"\n                placeholder=\"deviceID\"\n                value={deviceInfo.deviceID}\n                onChange={handleInputChange}\n              />\n              <input\n                name=\"deviceStatus\"\n                placeholder=\"Device Status\"\n                value={deviceInfo.deviceStatus}\n                onChange={handleInputChange}\n              />\n              <input\n                type=\"date\"\n                name=\"manufactureDate\"\n                value={deviceInfo.manufactureDate}\n                onChange={handleInputChange}\n              />\n              <button type=\"submit\">Save Device</button>\n            </form>\n            <span className=\"close\" onClick={handleCloseForm}>\n              &times;\n            </span>\n          </div>\n        </div>\n      )}\n      <div className=\"device-list\">\n        {filteredDevices.map((device) => (\n          <div key={device.id} className=\"device-item\">\n            <div className=\"device-details\">\n              <h2>{device.deviceName}</h2>\n              <p>Type: {device.deviceType}</p>\n              <p>deviceID: {device.deviceID}</p>\n              <p>Status: {device.deviceStatus}</p>\n              <p>Manufacture Date: {device.manufactureDate}</p>\n            </div>\n            <div className=\"button-device\">\n              <button\n                onClick={() => {\n                  setDeviceInfo(device);\n                  setShowDeviceForm(true);\n                }}\n              >\n                Setting\n              </button>\n              <button onClick={() => handleDeleteDevice(device.id)}>Delete</button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\nexport default ManageDevice;\n"]},"metadata":{},"sourceType":"module"}