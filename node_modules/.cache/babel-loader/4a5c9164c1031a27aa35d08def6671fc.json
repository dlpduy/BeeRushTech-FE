{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ecomerce\\\\firebase-main\\\\src\\\\pages\\\\Doctor\\\\components\\\\UpdateMedicine.js\",\n    _s = $RefreshSig$();\n\n// src/components/AppointmentForm.js\nimport React from 'react';\nimport { useState } from 'react';\nimport { db } from '../../services/firebase-config';\nimport { updateDoc, doc } from \"firebase/firestore\"; // Import các biến và hàm từ Firebase Firestore\n\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport DoctorNavbar from './DoctorNavbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateMedicine = () => {\n  _s();\n\n  const [medicine, setMedicine] = useState('');\n  const [quantity, setQuantity] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // Ngăn chặn hành động mặc định của form\n\n    try {\n      // Truy vấn cơ sở dữ liệu để lấy thông tin về thuốc\n      const medicineQuery = query(collection(db, 'medicines'), where('name', '==', medicine));\n      const medicineSnapshot = await getDocs(medicineQuery);\n      const medicineDoc = medicineSnapshot.docs[0]; // Kiểm tra nếu không tìm thấy thuốc\n\n      if (!medicineDoc) {\n        setError('Medicine not found!');\n        return;\n      }\n\n      const medicineData = medicineDoc.data();\n      const currentQuantity = medicineData.quantity; // Kiểm tra số lượng thuốc còn lại\n\n      if (currentQuantity < quantity) {\n        setError('Not enough medicine!');\n        console.error('Error updating quantity:', error);\n        alert('Not enough medicine!');\n        return;\n      } // Cập nhật số lượng thuốc\n\n\n      const medicineRef = doc(db, 'medicines', medicineDoc.id); // Lấy reference của document cần cập nhật\n\n      const updatedQuantity = currentQuantity - parseInt(quantity);\n      await updateDoc(medicineRef, {\n        quantity: updatedQuantity\n      }); // Thực hiện các hành động cần thiết sau khi cập nhật thành công\n\n      console.log('Quantity updated successfully!');\n      setError('');\n    } catch (error) {\n      console.error('Error updating quantity:', error);\n      setError('Error updating quantity!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DoctorNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctor\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"appointment-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Update Medicine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"update-medicine\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"appoi-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"medicine-name\",\n                  children: \"Medicine: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"quantity\",\n                  children: \"Quantity: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-ingr\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"medicine-name\",\n                  name: \"medicine-name\",\n                  required: true,\n                  value: medicine,\n                  onChange: e => setMedicine(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"quantity\",\n                  name: \"quantity\",\n                  required: true,\n                  value: quantity,\n                  onChange: e => setQuantity(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateMedicine, \"1e58UcF3bdxWJ9l8RX2TBN06pVs=\");\n\n_c = UpdateMedicine;\nexport default UpdateMedicine;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateMedicine\");","map":{"version":3,"sources":["D:/Ecomerce/firebase-main/src/pages/Doctor/components/UpdateMedicine.js"],"names":["React","useState","db","updateDoc","doc","collection","query","where","getDocs","DoctorNavbar","UpdateMedicine","medicine","setMedicine","quantity","setQuantity","error","setError","handleSubmit","e","preventDefault","medicineQuery","medicineSnapshot","medicineDoc","docs","medicineData","data","currentQuantity","console","alert","medicineRef","id","updatedQuantity","parseInt","log","target","value"],"mappings":"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","sourcesContent":["// src/components/AppointmentForm.js\nimport React from 'react';\nimport { useState } from 'react';\nimport { db } from '../../services/firebase-config';\nimport { updateDoc, doc } from \"firebase/firestore\"; // Import các biến và hàm từ Firebase Firestore\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport DoctorNavbar from './DoctorNavbar';\n\n\nconst UpdateMedicine = () => {\n  const [medicine, setMedicine] = useState('');\n    const [quantity, setQuantity] = useState('');\n    const [error, setError] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault(); // Ngăn chặn hành động mặc định của form\n\n        try {\n            // Truy vấn cơ sở dữ liệu để lấy thông tin về thuốc\n            const medicineQuery = query(collection(db, 'medicines'), where('name', '==', medicine));\n            const medicineSnapshot = await getDocs(medicineQuery);\n            const medicineDoc = medicineSnapshot.docs[0];\n\n            // Kiểm tra nếu không tìm thấy thuốc\n            if (!medicineDoc) {\n                setError('Medicine not found!');\n                return;\n            }\n\n            const medicineData = medicineDoc.data();\n            const currentQuantity = medicineData.quantity;\n\n            // Kiểm tra số lượng thuốc còn lại\n            if (currentQuantity < quantity) {\n                setError('Not enough medicine!');\n                console.error('Error updating quantity:', error);\n                alert('Not enough medicine!');\n                return;\n            }\n\n            // Cập nhật số lượng thuốc\n            const medicineRef = doc(db, 'medicines', medicineDoc.id); // Lấy reference của document cần cập nhật\n            const updatedQuantity = currentQuantity - parseInt(quantity);\n            await updateDoc(medicineRef, { quantity: updatedQuantity });\n\n            // Thực hiện các hành động cần thiết sau khi cập nhật thành công\n            console.log('Quantity updated successfully!');\n            setError('');\n        } catch (error) {\n            console.error('Error updating quantity:', error);\n            setError('Error updating quantity!');\n        }\n    };\n\n  return (\n    <div>\n      <DoctorNavbar />\n      \n      <div className=\"doctor\">\n          <div className=\"appointment-form\">\n              <h2>Update Medicine</h2>\n              <form id=\"update-medicine\" onSubmit={handleSubmit}>\n                  <div className='appoi-form'>\n                      <div className='form'>\n                              <p>\n                                  <label htmlFor='medicine-name'>Medicine: </label>\n                              </p>\n                              <br />\n                              <p>\n                                  <label htmlFor='quantity'>Quantity: </label>\n                              </p>\n                      </div>\n                      <div className='form-ingr'>\n                          <p>\n                              <input\n                                  type='text'\n                                  className=\"medicine-name\" name='medicine-name'\n                                  required\n                                  value={medicine}\n                                  onChange={(e) => setMedicine(e.target.value)}\n                              />\n                          </p>\n                          <br />\n                          <p>\n                              <input\n                                  type='number'\n                                  className=\"quantity\" name='quantity'\n                                  required\n                                  value={quantity}\n                                  onChange={(e) => setQuantity(e.target.value)}\n                              />\n                          </p>\n                      </div>\n                      <p></p>\n                  </div>\n                  <br />\n                  <button type=\"submit\" className=\"button\">Submit</button>\n              </form>\n          </div>\n      </div>\n  </div>\n    );\n}\n\nexport default UpdateMedicine;\n"]},"metadata":{},"sourceType":"module"}