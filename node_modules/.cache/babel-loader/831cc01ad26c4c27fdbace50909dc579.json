{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ecomerce\\\\firebase-main\\\\src\\\\pages\\\\Doctor\\\\components\\\\UpdatePatient.js\",\n    _s = $RefreshSig$();\n\n// src/components/AppointmentForm.js\nimport React from 'react';\nimport { useState } from 'react';\nimport { db } from '../../services/firebase-config';\nimport { getDoc, updateDoc, doc } from \"firebase/firestore\"; // Import các biến và hàm từ Firebase Firestore\n\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport { useAuthValue } from '../../../context/AuthContext';\nimport DoctorNavbar from './DoctorNavbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isValid = (e, name, mail) => {\n  if (e.history == null) {\n    console.log('Patient is valid');\n    return true;\n  } // Check if there are existing appointments that match the provided date and time\n\n\n  const conflictingPatient = e.history.find(his => his.patientName === name && his.patientMail === mail);\n\n  if (!conflictingPatient) {\n    console.log('Patient is valid');\n    return true;\n  } // If there is a conflicting patient, it's invalid\n\n\n  console.log('Patient is not valid');\n  return false;\n};\n\nconst UpdatePatient = () => {\n  _s();\n\n  const [patient, setPatient] = useState('');\n  const [mail, setMail] = useState('');\n  const [date, setDate] = useState('');\n  const [diagnosis, setDiagnosis] = useState('');\n  const [health, setHealth] = useState('');\n  const [treatments, setTreatments] = useState('');\n  const {\n    currentUser\n  } = useAuthValue();\n\n  const resetForm = () => {\n    setDate('');\n    setDiagnosis('');\n    setHealth('');\n    setMail('');\n    setPatient('');\n    setTreatments('');\n  };\n\n  const updatePatient = async e => {\n    e.preventDefault();\n\n    try {\n      // Lấy tài liệu người dùng từ Firestore\n      //currentUser.uid\n      const userRef = doc(db, 'doctor', currentUser.uid);\n      const userDoc = await getDoc(userRef);\n      const userData = userDoc.data(); // Dữ liệu hiện tại của người dùng\n\n      try {\n        const qPatient = query(collection(db, 'users'), where('username', '==', patient), where('email', '==', mail));\n        const patientsQuerySnapshot = await getDocs(qPatient);\n        const patientsDoc = patientsQuerySnapshot.docs[0];\n        const patientsData = patientsDoc.data();\n\n        if (!patientsData.hasOwnProperty('history')) {\n          // Nếu trường \"appointments\" chưa tồn tại, tạo một trường mới với mảng rỗng\n          patientsData.history = [];\n        }\n\n        const updatedPatientData = { ...patientsData,\n          history: [...patientsData.history]\n        }; // Nếu mảng cuộc hẹn không rỗng, thêm cuộc hẹn mới vào cuối mảng\n\n        updatedPatientData.history.push({\n          Day_start: date,\n          DoctorName: userData.name,\n          Diagnosis: diagnosis,\n          Health_status: health,\n          Treatments: treatments\n        });\n        await updateDoc(patientsDoc.ref, updatedPatientData);\n        alert('Update successfull!');\n        resetForm();\n      } catch (error) {\n        console.error('Error getting patient: ', error);\n      }\n\n      if (isValid(userData, patient, mail)) {\n        if (!userData.hasOwnProperty('history')) {\n          // Nếu trường \"history\" chưa tồn tại, tạo một trường mới với mảng rỗng\n          userData.history = [];\n        }\n\n        const updatedUserData = { ...userData,\n          history: [...userData.history]\n        };\n        updatedUserData.history.push({\n          patientName: patient,\n          patientMail: mail\n        });\n        await updateDoc(userRef, updatedUserData);\n        console.log('update successfull!');\n        console.log('Updated Patient successfully!');\n      }\n    } catch (error) {\n      console.error('Error Updated Patient: ', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DoctorNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctor\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"containerd\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"appointment-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Update Patient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            id: \"update-patient\",\n            onSubmit: updatePatient,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"appoi-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"uppatient-name1\",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"patient-time\",\n                      children: \"Patient: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"patient-mail1\",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"patient-mail\",\n                      children: \"Patient's Mail: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"start-day1\",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"start-day\",\n                      children: \"Start day: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"diagnosis1\",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"diagnosis\",\n                      children: \"Diagnosis: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"health1\",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"health\",\n                      children: \"Health status: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"treatments1\",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"treatments\",\n                      children: \"Treatments: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-ingr\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"uppatient-name\",\n                    name: \"patient-name\",\n                    value: patient,\n                    onChange: e => setPatient(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"patient-mail\",\n                    name: \"patient-mail\",\n                    value: mail,\n                    onChange: e => setMail(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"date\",\n                    className: \"start-day\",\n                    name: \"start-day\",\n                    value: date,\n                    onChange: e => setDate(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"diagnosis\",\n                    name: \"diagnosis\",\n                    value: diagnosis,\n                    onChange: e => setDiagnosis(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"health\",\n                    name: \"health\",\n                    value: health,\n                    onChange: e => setHealth(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"treatments\",\n                    name: \"treatments\",\n                    value: treatments,\n                    onChange: e => setTreatments(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"button\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdatePatient, \"l5+IZU3N2Z9C+AideMwxexd1CMI=\", false, function () {\n  return [useAuthValue];\n});\n\n_c = UpdatePatient;\nexport default UpdatePatient;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePatient\");","map":{"version":3,"sources":["D:/Ecomerce/firebase-main/src/pages/Doctor/components/UpdatePatient.js"],"names":["React","useState","db","getDoc","updateDoc","doc","collection","query","where","getDocs","useAuthValue","DoctorNavbar","isValid","e","name","mail","history","console","log","conflictingPatient","find","his","patientName","patientMail","UpdatePatient","patient","setPatient","setMail","date","setDate","diagnosis","setDiagnosis","health","setHealth","treatments","setTreatments","currentUser","resetForm","updatePatient","preventDefault","userRef","uid","userDoc","userData","data","qPatient","patientsQuerySnapshot","patientsDoc","docs","patientsData","hasOwnProperty","updatedPatientData","push","Day_start","DoctorName","Diagnosis","Health_status","Treatments","ref","alert","error","updatedUserData","target","value"],"mappings":"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","sourcesContent":["// src/components/AppointmentForm.js\nimport React from 'react';\nimport { useState } from 'react';\nimport { db } from '../../services/firebase-config';\nimport { getDoc, updateDoc, doc } from \"firebase/firestore\"; // Import các biến và hàm từ Firebase Firestore\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport { useAuthValue } from '../../../context/AuthContext';\nimport DoctorNavbar from './DoctorNavbar';\n\nconst isValid = (e, name, mail) => {\n  if (e.history == null) {\n      console.log('Patient is valid');\n      return true;\n  }\n  \n  // Check if there are existing appointments that match the provided date and time\n  const conflictingPatient = e.history.find(his => his.patientName === name && his.patientMail === mail);\n  \n  if (!conflictingPatient) {\n      console.log('Patient is valid');\n      return true;\n  }\n\n  // If there is a conflicting patient, it's invalid\n  console.log('Patient is not valid');\n  return false;\n};\n\nconst UpdatePatient = () => {\n  const [patient, setPatient] = useState('');\n  const [mail, setMail] = useState('');\n  const [date, setDate] = useState('');\n  const [diagnosis, setDiagnosis] = useState('');\n  const [health, setHealth] = useState('');\n  const [treatments, setTreatments] = useState('');\n  const { currentUser } = useAuthValue();\n\n    const resetForm = () => {\n    setDate('');\n    setDiagnosis('');\n    setHealth('');\n    setMail('');\n    setPatient('');\n    setTreatments('');\n  };\n\n  const updatePatient = async (e) => {\n    e.preventDefault();\n    try {\n        // Lấy tài liệu người dùng từ Firestore\n        //currentUser.uid\n        const userRef = doc(db, 'doctor', currentUser.uid);\n        const userDoc = await getDoc(userRef);\n        const userData = userDoc.data(); // Dữ liệu hiện tại của người dùng\n\n        try{\n            const qPatient = query(collection(db, 'users'), where('username', '==', patient), where('email', '==', mail));\n            const patientsQuerySnapshot = await getDocs(qPatient);\n            const patientsDoc = patientsQuerySnapshot.docs[0];\n            const patientsData = patientsDoc.data();\n\n            if (!patientsData.hasOwnProperty('history')) {\n              // Nếu trường \"appointments\" chưa tồn tại, tạo một trường mới với mảng rỗng\n              patientsData.history = [];\n          }\n\n            const updatedPatientData = {\n              ...patientsData,\n              history: [\n                  ...patientsData.history,\n              ]\n           };\n          \n          \n            // Nếu mảng cuộc hẹn không rỗng, thêm cuộc hẹn mới vào cuối mảng\n            updatedPatientData.history.push({\n                Day_start: date,\n                DoctorName: userData.name,\n                Diagnosis: diagnosis,\n                Health_status: health,\n                Treatments: treatments\n            }); \n          \n            await updateDoc(patientsDoc.ref, updatedPatientData);\n            \n            alert('Update successfull!');\n            resetForm();\n          }\n        catch(error){\n            console.error('Error getting patient: ', error);\n        }\n\n        if(isValid(userData, patient, mail)) {\n          if (!userData.hasOwnProperty('history')) {\n            // Nếu trường \"history\" chưa tồn tại, tạo một trường mới với mảng rỗng\n            userData.history = [];\n          }\n\n          const updatedUserData = {\n            ...userData,\n            history: [\n                ...userData.history,\n            ]\n          };\n\n          updatedUserData.history.push({\n            patientName: patient,\n            patientMail: mail\n          });\n\n          await updateDoc(userRef, updatedUserData);\n          console.log('update successfull!')\n          console.log('Updated Patient successfully!');\n        }\n    } catch (error) {\n        console.error('Error Updated Patient: ', error);\n    }\n};\n\n\n\n\n  return (\n    <div>\n      <DoctorNavbar />\n\n      <div className='doctor'>\n\n        \n        <div className=\"containerd\">\n          <div className=\"appointment-form\">\n            <h2>Update Patient</h2>\n                <form id=\"update-patient\" onSubmit={updatePatient}>\n              \n\n                  <div className='appoi-form'>\n                    <div  className='form'>\n                      <strong>\n                      <p className='uppatient-name1'>\n                          <label htmlFor=\"patient-time\" >Patient: </label>\n                      </p>\n                      <p  className='patient-mail1'>\n                      <label htmlFor=\"patient-mail\"  >Patient's Mail: </label>\n                      </p>\n                      <p className='start-day1'>\n                          <label htmlFor='start-day'>Start day: </label>\n                      </p>\n                      <p className='diagnosis1'>\n                          <label htmlFor='diagnosis'>Diagnosis: </label>\n                      </p>\n                      <p className='health1'>\n                          <label htmlFor='health'>Health status: </label>\n                      </p>\n                      <p className='treatments1'>\n                          <label htmlFor='treatments'>Treatments: </label>\n                      </p>\n                      </strong>\n                    </div>\n\n                    <div className='form-ingr'>\n                      <p>\n                        <input\n                          type='text'\n                          className=\"uppatient-name\" name='patient-name'\n                          value={patient}\n                          onChange={(e) => setPatient(e.target.value)}\n                          required\n                        />\n                      </p>\n                      <p>\n                        <input\n                            type=\"text\"\n                            className=\"patient-mail\" name=\"patient-mail\"\n                            value={mail}\n                            onChange={(e) => setMail(e.target.value)}\n                            required\n                        />\n                      </p>\n                      <p>\n                        <input\n                          type='date'\n                          className=\"start-day\" name='start-day'\n                          value={date}\n                          onChange={(e) => setDate(e.target.value)}\n                          required\n                        />\n                      </p>\n                      <p>\n                        <input\n                          type='text'\n                          className=\"diagnosis\" name='diagnosis'\n                          value={diagnosis}\n                          onChange={(e) => setDiagnosis(e.target.value)}\n                          required\n                        />\n                      </p>\n                      <p>\n                        <input\n                          type='text'\n                          className=\"health\" name='health'\n                          value={health}\n                          onChange={(e) => setHealth(e.target.value)}\n                          required\n                        />\n                      </p>\n                      <p>\n                        <input \n                          type='text'\n                          className='treatments' name='treatments'\n                          value={treatments}\n                          onChange={(e) => setTreatments(e.target.value)}\n                          required\n                        />\n                      </p>\n                    </div>\n                    <p></p>\n                    </div>\n                  <button type=\"submit\" className=\"button\">Submit</button>\n                </form>\n                \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UpdatePatient;\n\n"]},"metadata":{},"sourceType":"module"}