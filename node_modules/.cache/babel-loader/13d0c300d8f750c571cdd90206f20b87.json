{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ecomerce\\\\firebase-main\\\\src\\\\pages\\\\Administrator\\\\components\\\\Contents\\\\ManageDoctors\\\\ManageDoctors.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './ManageDoctors.css';\nimport { collection, onSnapshot, getDocs, deleteDoc, doc } from 'firebase/firestore';\nimport { db } from '../../../../services/firebase-config';\nimport { CiTrash } from \"react-icons/ci\";\nimport AdminNavbar from '../../AdminNavbar';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ManageDoctors = () => {\n  _s();\n\n  const [title, setTitle] = useState(['Order', 'Name', 'Email', 'Phone Number', 'Gender', 'Day Of Birth', 'Major', 'Status', 'UID']);\n  const [doctors, setDoctors] = useState([]);\n  const [searchField, setSearchField] = useState('');\n  const [selectedProperty, setSelectedProperty] = useState('Name'); // Mặc định chọn tìm kiếm theo tên\n\n  const [statistics, setStatistics] = useState({\n    totalDoctors: 0,\n    maleDoctors: 0,\n    femaleDoctors: 0\n  });\n  const [selectedOption, setSelectedOption] = useState('');\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const ref = collection(db, 'doctor');\n        const querySnapshot = await getDocs(ref);\n        const doctorList = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setDoctors(doctorList); // Update statistics\n\n        const totalDoctors = doctorList.length;\n        const maleDoctors = doctorList.filter(doctor => doctor.gender === true).length;\n        const femaleDoctors = totalDoctors - maleDoctors;\n        setStatistics({\n          totalDoctors,\n          maleDoctors,\n          femaleDoctors\n        });\n      } catch (error) {\n        console.error(\"Error getting documents:\", error);\n      }\n    };\n\n    fetchData();\n    const unsubscribe = onSnapshot(collection(db, 'doctor'), snapshot => {\n      const updatedDoctors = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setDoctors(updatedDoctors); // Update statistics\n\n      const totalDoctors = updatedDoctors.length;\n      const maleDoctors = updatedDoctors.filter(doctor => doctor.gender === true).length;\n      const femaleDoctors = totalDoctors - maleDoctors;\n      setStatistics({\n        totalDoctors,\n        maleDoctors,\n        femaleDoctors\n      });\n    });\n    return () => unsubscribe();\n  }, []);\n\n  const handleDeleteDoctor = async doctorId => {\n    const isConfirmed = window.confirm(\"Bạn có chắc chắn muốn xóa bác sĩ này không?\");\n\n    if (isConfirmed) {\n      try {\n        await deleteDoc(doc(db, 'doctor', doctorId));\n        setDoctors(doctors.filter(doctor => doctor.id !== doctorId));\n        console.log(\"Doctor deleted successfully!\");\n      } catch (error) {\n        console.error(\"Error deleting doctor:\", error);\n      }\n    }\n  };\n\n  const formatDate = dateString => {\n    const [day, month, year] = dateString.split('/');\n    return `${day}/${month}/${year}`;\n  };\n\n  const handleAddDoctor = () => {\n    history.push('/signupdoc');\n  };\n\n  const filteredDoctors = doctors.filter(doctor => {\n    if (!searchField) return true; // Nếu không có giá trị tìm kiếm, hiển thị tất cả bác sĩ\n\n    const fieldValue = doctor[selectedProperty];\n\n    if (selectedProperty === 'gender') {\n      const genderValue = fieldValue ? 'male' : 'female';\n      return genderValue.toLowerCase().includes(searchField.toLowerCase());\n    }\n\n    if (selectedProperty === 'status') {\n      const statusValue = fieldValue ? 'ready' : 'busy';\n      return statusValue.toLowerCase().includes(searchField.toLowerCase());\n    }\n\n    if (!fieldValue) return false; // Nếu thuộc tính không tồn tại, loại bỏ bác sĩ này khỏi danh sách\n\n    const fieldValueLowerCase = fieldValue.toString().toLowerCase();\n    return fieldValueLowerCase.includes(searchField.toLowerCase());\n  });\n\n  const handleOptionChange = event => {\n    setSelectedOption(event.target.value);\n  };\n\n  const handleGenderStatistic = () => {\n    // Tính toán số lượng bác sĩ nam và nữ\n    const maleDoctors = doctors.filter(doctor => doctor.gender === true).length;\n    const femaleDoctors = doctors.length - maleDoctors; // Cập nhật state cho thống kê\n\n    setStatistics({\n      totalDoctors: doctors.length,\n      maleDoctors,\n      femaleDoctors\n    });\n  };\n\n  const handleStatusStatistic = () => {\n    // Tính toán số lượng bác sĩ sẵn sàng và bận rộn\n    const readyDoctors = doctors.filter(doctor => doctor.status === true).length;\n    const busyDoctors = doctors.length - readyDoctors; // Cập nhật state cho thống kê\n\n    setStatistics({\n      totalDoctors: doctors.length,\n      readyDoctors,\n      busyDoctors\n    });\n  };\n\n  const handleStatistic = () => {\n    if (selectedOption === 'gender') {\n      handleGenderStatistic();\n    } else if (selectedOption === 'status') {\n      handleStatusStatistic();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AdminNavbar\",\n      children: /*#__PURE__*/_jsxDEV(AdminNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContainerAdminDoctor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Newdoctor\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddDoctor,\n          children: \"+  Add Doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Searching\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"propertySelect\",\n          children: \"Select Properties:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"propertySelect\",\n          value: selectedProperty,\n          onChange: e => setSelectedProperty(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"gender\",\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"major\",\n            children: \"Major\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"status\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Searching...\",\n          value: searchField,\n          onChange: e => setSearchField(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Showinfor\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: title.map((t, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: t\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: filteredDoctors.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.phonenumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.gender === true ? \"Male\" : \"Female\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(item.birth)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.major\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.status === true ? \"Ready\" : \"Busy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.uid\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(CiTrash, {\n                  style: {\n                    fontSize: '24px',\n                    color: 'red',\n                    cursor: 'pointer'\n                  },\n                  onClick: () => handleDeleteDoctor(item.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Statistics\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"Statistics-heading\",\n          children: \"STATISTICS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedOption,\n          onChange: handleOptionChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"gender\",\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"status\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStatistic,\n          children: \"Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), selectedOption === 'gender' && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Doctors: \", statistics.totalDoctors, \", Male Doctors: \", statistics.maleDoctors, \", Female Doctors: \", statistics.femaleDoctors]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this), selectedOption === 'status' && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Doctors: \", statistics.totalDoctors, \", Ready Doctors: \", statistics.readyDoctors, \", Busy Doctors: \", statistics.busyDoctors]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ManageDoctors, \"WvEldPAOxxZdI/Wu1tv55SmJK3k=\", false, function () {\n  return [useHistory];\n});\n\n_c = ManageDoctors;\nexport default ManageDoctors;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManageDoctors\");","map":{"version":3,"sources":["D:/Ecomerce/firebase-main/src/pages/Administrator/components/Contents/ManageDoctors/ManageDoctors.js"],"names":["React","useState","useEffect","collection","onSnapshot","getDocs","deleteDoc","doc","db","CiTrash","AdminNavbar","useHistory","ManageDoctors","title","setTitle","doctors","setDoctors","searchField","setSearchField","selectedProperty","setSelectedProperty","statistics","setStatistics","totalDoctors","maleDoctors","femaleDoctors","selectedOption","setSelectedOption","history","fetchData","ref","querySnapshot","doctorList","docs","map","id","data","length","filter","doctor","gender","error","console","unsubscribe","snapshot","updatedDoctors","handleDeleteDoctor","doctorId","isConfirmed","window","confirm","log","formatDate","dateString","day","month","year","split","handleAddDoctor","push","filteredDoctors","fieldValue","genderValue","toLowerCase","includes","statusValue","fieldValueLowerCase","toString","handleOptionChange","event","target","value","handleGenderStatistic","handleStatusStatistic","readyDoctors","status","busyDoctors","handleStatistic","e","t","index","item","name","email","phonenumber","birth","major","uid","fontSize","color","cursor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,qBAAP;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,OAAjC,EAA0CC,SAA1C,EAAqDC,GAArD,QAAgE,oBAAhE;AACA,SAASC,EAAT,QAAmB,sCAAnB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,CAAC,OAAD,EAAU,MAAV,EAAkB,OAAlB,EAA2B,cAA3B,EAA2C,QAA3C,EAAqD,cAArD,EAAqE,OAArE,EAA8E,QAA9E,EAAwF,KAAxF,CAAD,CAAlC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACkB,gBAAD,EAAmBC,mBAAnB,IAA0CnB,QAAQ,CAAC,MAAD,CAAxD,CAJwB,CAI0C;;AAClE,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC;AAAEsB,IAAAA,YAAY,EAAE,CAAhB;AAAmBC,IAAAA,WAAW,EAAE,CAAhC;AAAmCC,IAAAA,aAAa,EAAE;AAAlD,GAAD,CAA5C;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsC1B,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM2B,OAAO,GAAGjB,UAAU,EAA1B;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM2B,SAAS,GAAG,YAAY;AAC1B,UAAI;AACA,cAAMC,GAAG,GAAG3B,UAAU,CAACK,EAAD,EAAK,QAAL,CAAtB;AACA,cAAMuB,aAAa,GAAG,MAAM1B,OAAO,CAACyB,GAAD,CAAnC;AACA,cAAME,UAAU,GAAGD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAuB3B,GAAG,KAAK;AAAE4B,UAAAA,EAAE,EAAE5B,GAAG,CAAC4B,EAAV;AAAc,aAAG5B,GAAG,CAAC6B,IAAJ;AAAjB,SAAL,CAA1B,CAAnB;AACApB,QAAAA,UAAU,CAACgB,UAAD,CAAV,CAJA,CAMA;;AACA,cAAMT,YAAY,GAAGS,UAAU,CAACK,MAAhC;AACA,cAAMb,WAAW,GAAGQ,UAAU,CAACM,MAAX,CAAkBC,MAAM,IAAIA,MAAM,CAACC,MAAP,KAAkB,IAA9C,EAAoDH,MAAxE;AACA,cAAMZ,aAAa,GAAGF,YAAY,GAAGC,WAArC;AACAF,QAAAA,aAAa,CAAC;AAAEC,UAAAA,YAAF;AAAgBC,UAAAA,WAAhB;AAA6BC,UAAAA;AAA7B,SAAD,CAAb;AACH,OAXD,CAWE,OAAOgB,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;AACH;AACJ,KAfD;;AAiBAZ,IAAAA,SAAS;AAET,UAAMc,WAAW,GAAGvC,UAAU,CAACD,UAAU,CAACK,EAAD,EAAK,QAAL,CAAX,EAA4BoC,QAAD,IAAc;AACnE,YAAMC,cAAc,GAAGD,QAAQ,CAACX,IAAT,CAAcC,GAAd,CAAkB3B,GAAG,KAAK;AAAE4B,QAAAA,EAAE,EAAE5B,GAAG,CAAC4B,EAAV;AAAc,WAAG5B,GAAG,CAAC6B,IAAJ;AAAjB,OAAL,CAArB,CAAvB;AACApB,MAAAA,UAAU,CAAC6B,cAAD,CAAV,CAFmE,CAInE;;AACA,YAAMtB,YAAY,GAAGsB,cAAc,CAACR,MAApC;AACA,YAAMb,WAAW,GAAGqB,cAAc,CAACP,MAAf,CAAsBC,MAAM,IAAIA,MAAM,CAACC,MAAP,KAAkB,IAAlD,EAAwDH,MAA5E;AACA,YAAMZ,aAAa,GAAGF,YAAY,GAAGC,WAArC;AACAF,MAAAA,aAAa,CAAC;AAAEC,QAAAA,YAAF;AAAgBC,QAAAA,WAAhB;AAA6BC,QAAAA;AAA7B,OAAD,CAAb;AACH,KAT6B,CAA9B;AAWA,WAAO,MAAMkB,WAAW,EAAxB;AACH,GAhCQ,EAgCN,EAhCM,CAAT;;AAkCA,QAAMG,kBAAkB,GAAG,MAAOC,QAAP,IAAoB;AAC3C,UAAMC,WAAW,GAAGC,MAAM,CAACC,OAAP,CAAe,6CAAf,CAApB;;AACA,QAAIF,WAAJ,EAAiB;AACb,UAAI;AACA,cAAM1C,SAAS,CAACC,GAAG,CAACC,EAAD,EAAK,QAAL,EAAeuC,QAAf,CAAJ,CAAf;AACA/B,QAAAA,UAAU,CAACD,OAAO,CAACuB,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACJ,EAAP,KAAcY,QAAvC,CAAD,CAAV;AACAL,QAAAA,OAAO,CAACS,GAAR,CAAY,8BAAZ;AACH,OAJD,CAIE,OAAOV,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAc,wBAAd,EAAwCA,KAAxC;AACH;AACJ;AACJ,GAXD;;AAaA,QAAMW,UAAU,GAAIC,UAAD,IAAgB;AAC/B,UAAM,CAACC,GAAD,EAAMC,KAAN,EAAaC,IAAb,IAAqBH,UAAU,CAACI,KAAX,CAAiB,GAAjB,CAA3B;AACA,WAAQ,GAAEH,GAAI,IAAGC,KAAM,IAAGC,IAAK,EAA/B;AACH,GAHD;;AAKA,QAAME,eAAe,GAAG,MAAM;AAC1B9B,IAAAA,OAAO,CAAC+B,IAAR,CAAa,YAAb;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAG7C,OAAO,CAACuB,MAAR,CAAeC,MAAM,IAAI;AAC7C,QAAI,CAACtB,WAAL,EAAkB,OAAO,IAAP,CAD2B,CACd;;AAC/B,UAAM4C,UAAU,GAAGtB,MAAM,CAACpB,gBAAD,CAAzB;;AACA,QAAIA,gBAAgB,KAAK,QAAzB,EAAmC;AAC/B,YAAM2C,WAAW,GAAGD,UAAU,GAAG,MAAH,GAAY,QAA1C;AACA,aAAOC,WAAW,CAACC,WAAZ,GAA0BC,QAA1B,CAAmC/C,WAAW,CAAC8C,WAAZ,EAAnC,CAAP;AACH;;AACD,QAAI5C,gBAAgB,KAAK,QAAzB,EAAmC;AAC/B,YAAM8C,WAAW,GAAGJ,UAAU,GAAG,OAAH,GAAa,MAA3C;AACA,aAAOI,WAAW,CAACF,WAAZ,GAA0BC,QAA1B,CAAmC/C,WAAW,CAAC8C,WAAZ,EAAnC,CAAP;AACH;;AACD,QAAI,CAACF,UAAL,EAAiB,OAAO,KAAP,CAX4B,CAWd;;AAC/B,UAAMK,mBAAmB,GAAGL,UAAU,CAACM,QAAX,GAAsBJ,WAAtB,EAA5B;AACA,WAAOG,mBAAmB,CAACF,QAApB,CAA6B/C,WAAW,CAAC8C,WAAZ,EAA7B,CAAP;AACH,GAduB,CAAxB;;AAgBA,QAAMK,kBAAkB,GAAIC,KAAD,IAAW;AAClC1C,IAAAA,iBAAiB,CAAC0C,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AACH,GAFD;;AAIA,QAAMC,qBAAqB,GAAG,MAAM;AAChC;AACA,UAAMhD,WAAW,GAAGT,OAAO,CAACuB,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACC,MAAP,KAAkB,IAA3C,EAAiDH,MAArE;AACA,UAAMZ,aAAa,GAAGV,OAAO,CAACsB,MAAR,GAAiBb,WAAvC,CAHgC,CAIhC;;AACAF,IAAAA,aAAa,CAAC;AAAEC,MAAAA,YAAY,EAAER,OAAO,CAACsB,MAAxB;AAAgCb,MAAAA,WAAhC;AAA6CC,MAAAA;AAA7C,KAAD,CAAb;AACH,GAND;;AAQA,QAAMgD,qBAAqB,GAAG,MAAM;AAChC;AACA,UAAMC,YAAY,GAAG3D,OAAO,CAACuB,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACoC,MAAP,KAAkB,IAA3C,EAAiDtC,MAAtE;AACA,UAAMuC,WAAW,GAAG7D,OAAO,CAACsB,MAAR,GAAiBqC,YAArC,CAHgC,CAIhC;;AACApD,IAAAA,aAAa,CAAC;AAAEC,MAAAA,YAAY,EAAER,OAAO,CAACsB,MAAxB;AAAgCqC,MAAAA,YAAhC;AAA8CE,MAAAA;AAA9C,KAAD,CAAb;AACH,GAND;;AAQA,QAAMC,eAAe,GAAG,MAAM;AAC1B,QAAInD,cAAc,KAAK,QAAvB,EAAiC;AAC7B8C,MAAAA,qBAAqB;AACxB,KAFD,MAEO,IAAI9C,cAAc,KAAK,QAAvB,EAAiC;AACpC+C,MAAAA,qBAAqB;AACxB;AACJ,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI,QAAE,WAAF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAQ,UAAA,OAAO,EAAEf,eAAjB;AAAA,oBAAkC;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,gBAAf;AAAA,oBAAgC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,EAAE,EAAC,gBAAX;AAA4B,UAAA,KAAK,EAAEvC,gBAAnC;AAAqD,UAAA,QAAQ,EAAG2D,CAAD,IAAO1D,mBAAmB,CAAC0D,CAAC,CAACR,MAAF,CAASC,KAAV,CAAzF;AAAA,kCACI;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAA,sBAAqB;AAArB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAA,sBAAuB;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,YAAA,KAAK,EAAC,OAAd;AAAA,sBAAsB;AAAtB;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAA,sBAAuB;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAQI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,WAAW,EAAC,cAFhB;AAGI,UAAA,KAAK,EAAEtD,WAHX;AAII,UAAA,QAAQ,EAAG6D,CAAD,IAAO5D,cAAc,CAAC4D,CAAC,CAACR,MAAF,CAASC,KAAV;AAJnC;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAmBI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAA,kCACI;AAAA,mCACI;AAAA,wBACK1D,KAAK,CAACqB,GAAN,CAAU,CAAC6C,CAAD,EAAIC,KAAJ,kBACP;AAAA,0BAAiBD;AAAjB,iBAASC,KAAT;AAAA;AAAA;AAAA;AAAA,sBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI;AAAA,sBACKpB,eAAe,CAAC1B,GAAhB,CAAoB,CAAC+C,IAAD,EAAOD,KAAP,kBACjB;AAAA,sCACI;AAAA,0BAAKA,KAAK,GAAG;AAAb;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,0BAAKC,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA,0BAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA,0BAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA,0BAAKH,IAAI,CAACzC,MAAL,KAAgB,IAAhB,GAAuB,MAAvB,GAAgC;AAArC;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI;AAAA,0BAAKY,UAAU,CAAC6B,IAAI,CAACI,KAAN;AAAf;AAAA;AAAA;AAAA;AAAA,sBANJ,eAOI;AAAA,0BAAKJ,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,sBAPJ,eAQI;AAAA,0BAAKL,IAAI,CAACN,MAAL,KAAgB,IAAhB,GAAuB,OAAvB,GAAiC;AAAtC;AAAA;AAAA;AAAA;AAAA,sBARJ,eASI;AAAA,0BAAKM,IAAI,CAACM;AAAV;AAAA;AAAA;AAAA;AAAA,sBATJ,eAUI;AAAA,uCACI,QAAC,OAAD;AACI,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,QAAQ,EAAE,MAAZ;AAAoBC,oBAAAA,KAAK,EAAE,KAA3B;AAAkCC,oBAAAA,MAAM,EAAE;AAA1C,mBADX;AAEI,kBAAA,OAAO,EAAE,MAAM5C,kBAAkB,CAACmC,IAAI,CAAC9C,EAAN;AAFrC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAVJ;AAAA,eAAS6C,KAAT;AAAA;AAAA;AAAA;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAnBJ,eAmDI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,oBAAd;AAAA,oBAAmC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,KAAK,EAAEtD,cAAf;AAA+B,UAAA,QAAQ,EAAE0C,kBAAzC;AAAA,kCACI;AAAQ,YAAA,KAAK,EAAC,EAAd;AAAA,sBAAiB;AAAjB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAA,sBAAuB;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAA,sBAAuB;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAOI;AAAQ,UAAA,OAAO,EAAES,eAAjB;AAAA,oBAAkC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAPJ,EAQKnD,cAAc,KAAK,QAAnB,iBACG;AAAA,qBAAG,iBAAH,EAAmBL,UAAU,CAACE,YAA9B,EAA2C,kBAA3C,EAA4DF,UAAU,CAACG,WAAvE,EAAmF,oBAAnF,EAAsGH,UAAU,CAACI,aAAjH;AAAA;AAAA;AAAA;AAAA;AAAA,gBATR,EAWKC,cAAc,KAAK,QAAnB,iBACG;AAAA,qBAAG,iBAAH,EAAmBL,UAAU,CAACE,YAA9B,EAA2C,mBAA3C,EAA6DF,UAAU,CAACqD,YAAxE,EAAqF,kBAArF,EAAsGrD,UAAU,CAACuD,WAAjH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZR;AAAA;AAAA;AAAA;AAAA;AAAA,cAnDJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2EH,CAxLD;;GAAMhE,a;UAOcD,U;;;KAPdC,a;AA0LN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ManageDoctors.css';\nimport { collection, onSnapshot, getDocs, deleteDoc, doc } from 'firebase/firestore';\nimport { db } from '../../../../services/firebase-config'; \nimport { CiTrash } from \"react-icons/ci\";\nimport AdminNavbar from '../../AdminNavbar';\nimport { useHistory } from 'react-router-dom';\n\nconst ManageDoctors = () => {\n    const [title, setTitle] = useState(['Order', 'Name', 'Email', 'Phone Number', 'Gender', 'Day Of Birth', 'Major', 'Status', 'UID']);\n    const [doctors, setDoctors] = useState([]);\n    const [searchField, setSearchField] = useState('');\n    const [selectedProperty, setSelectedProperty] = useState('Name'); // Mặc định chọn tìm kiếm theo tên\n    const [statistics, setStatistics] = useState({ totalDoctors: 0, maleDoctors: 0, femaleDoctors: 0 });\n    const [selectedOption, setSelectedOption] = useState('');\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const ref = collection(db, 'doctor');\n                const querySnapshot = await getDocs(ref);\n                const doctorList = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n                setDoctors(doctorList);\n\n                // Update statistics\n                const totalDoctors = doctorList.length;\n                const maleDoctors = doctorList.filter(doctor => doctor.gender === true).length;\n                const femaleDoctors = totalDoctors - maleDoctors;\n                setStatistics({ totalDoctors, maleDoctors, femaleDoctors });\n            } catch (error) {\n                console.error(\"Error getting documents:\", error);\n            }\n        };\n\n        fetchData();\n\n        const unsubscribe = onSnapshot(collection(db, 'doctor'), (snapshot) => {\n            const updatedDoctors = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n            setDoctors(updatedDoctors);\n\n            // Update statistics\n            const totalDoctors = updatedDoctors.length;\n            const maleDoctors = updatedDoctors.filter(doctor => doctor.gender === true).length;\n            const femaleDoctors = totalDoctors - maleDoctors;\n            setStatistics({ totalDoctors, maleDoctors, femaleDoctors });\n        });\n\n        return () => unsubscribe();\n    }, []);\n\n    const handleDeleteDoctor = async (doctorId) => {\n        const isConfirmed = window.confirm(\"Bạn có chắc chắn muốn xóa bác sĩ này không?\");\n        if (isConfirmed) {\n            try {\n                await deleteDoc(doc(db, 'doctor', doctorId));\n                setDoctors(doctors.filter(doctor => doctor.id !== doctorId));\n                console.log(\"Doctor deleted successfully!\");\n            } catch (error) {\n                console.error(\"Error deleting doctor:\", error);\n            }\n        }\n    };\n\n    const formatDate = (dateString) => {\n        const [day, month, year] = dateString.split('/');\n        return `${day}/${month}/${year}`;\n    };\n\n    const handleAddDoctor = () => {\n        history.push('/signupdoc');\n    };\n\n    const filteredDoctors = doctors.filter(doctor => {\n        if (!searchField) return true; // Nếu không có giá trị tìm kiếm, hiển thị tất cả bác sĩ\n        const fieldValue = doctor[selectedProperty];\n        if (selectedProperty === 'gender') {\n            const genderValue = fieldValue ? 'male' : 'female';\n            return genderValue.toLowerCase().includes(searchField.toLowerCase());\n        }\n        if (selectedProperty === 'status') {\n            const statusValue = fieldValue ? 'ready' : 'busy';\n            return statusValue.toLowerCase().includes(searchField.toLowerCase());\n        }\n        if (!fieldValue) return false; // Nếu thuộc tính không tồn tại, loại bỏ bác sĩ này khỏi danh sách\n        const fieldValueLowerCase = fieldValue.toString().toLowerCase();\n        return fieldValueLowerCase.includes(searchField.toLowerCase());\n    });\n\n    const handleOptionChange = (event) => {\n        setSelectedOption(event.target.value);\n    };\n\n    const handleGenderStatistic = () => {\n        // Tính toán số lượng bác sĩ nam và nữ\n        const maleDoctors = doctors.filter(doctor => doctor.gender === true).length;\n        const femaleDoctors = doctors.length - maleDoctors;\n        // Cập nhật state cho thống kê\n        setStatistics({ totalDoctors: doctors.length, maleDoctors, femaleDoctors });\n    };\n\n    const handleStatusStatistic = () => {\n        // Tính toán số lượng bác sĩ sẵn sàng và bận rộn\n        const readyDoctors = doctors.filter(doctor => doctor.status === true).length;\n        const busyDoctors = doctors.length - readyDoctors;\n        // Cập nhật state cho thống kê\n        setStatistics({ totalDoctors: doctors.length, readyDoctors, busyDoctors });\n    };\n\n    const handleStatistic = () => {\n        if (selectedOption === 'gender') {\n            handleGenderStatistic();\n        } else if (selectedOption === 'status') {\n            handleStatusStatistic();\n        }\n    };\n\n    return (\n        <div className='body'>\n            <div className='AdminNavbar'>\n                < AdminNavbar />\n            </div>\n            <div className='ContainerAdminDoctor'>\n                <div className=\"Newdoctor\">\n                    <button onClick={handleAddDoctor}>+  Add Doctor</button>\n                </div>\n                <div className='Searching'>\n                    <label htmlFor=\"propertySelect\">Select Properties:</label>\n                    <select id=\"propertySelect\" value={selectedProperty} onChange={(e) => setSelectedProperty(e.target.value)}>\n                        <option value=\"name\">Name</option>\n                        <option value=\"gender\">Gender</option>\n                        <option value=\"major\">Major</option>\n                        <option value=\"status\">Status</option>\n                    </select>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Searching...\"\n                        value={searchField}\n                        onChange={(e) => setSearchField(e.target.value)}\n                    />\n                </div>\n                <div className='Showinfor'>\n                    <table>\n                        <thead>\n                            <tr>\n                                {title.map((t, index) => (\n                                    <th key={index}>{t}</th>\n                                ))}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {filteredDoctors.map((item, index) => (\n                                <tr key={index}>\n                                    <td>{index + 1}</td>\n                                    <td>{item.name}</td>\n                                    <td>{item.email}</td>\n                                    <td>{item.phonenumber}</td>\n                                    <td>{item.gender === true ? \"Male\" : \"Female\"}</td>\n                                    <td>{formatDate(item.birth)}</td>\n                                    <td>{item.major}</td>\n                                    <td>{item.status === true ? \"Ready\" : \"Busy\"}</td>\n                                    <td>{item.uid}</td>\n                                    <td>\n                                        <CiTrash\n                                            style={{ fontSize: '24px', color: 'red', cursor: 'pointer' }}\n                                            onClick={() => handleDeleteDoctor(item.id)}\n                                        />\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n                <div className='Statistics'>\n                    <h2 className='Statistics-heading'>STATISTICS</h2>\n                    <select value={selectedOption} onChange={handleOptionChange}>\n                        <option value=\"\">Select an option</option>\n                        <option value=\"gender\">Gender</option>\n                        <option value=\"status\">Status</option>\n                    </select>\n                    <button onClick={handleStatistic}>Statistics</button>\n                    {selectedOption === 'gender' && (\n                        <p>Total Doctors: {statistics.totalDoctors}, Male Doctors: {statistics.maleDoctors}, Female Doctors: {statistics.femaleDoctors}</p>\n                    )}\n                    {selectedOption === 'status' && (\n                        <p>Total Doctors: {statistics.totalDoctors}, Ready Doctors: {statistics.readyDoctors}, Busy Doctors: {statistics.busyDoctors}</p>\n                    )}\n                </div>\n            </div>\n            \n        </div>\n    );\n};\n\nexport default ManageDoctors;"]},"metadata":{},"sourceType":"module"}